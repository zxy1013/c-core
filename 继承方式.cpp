#include<iostream>
using namespace std;

class Base1
{
public:
	int m_A;
protected:
	int m_B;
private:
	int m_C;
};
//公共继承
class Son1 :public Base1
{
public:
	void func()
	{
		m_A = 10; //可访问public权限
		m_B = 10; //可访问protected权限
		//m_C; //不可访问
	}
};
void myClass()
{
	Son1 s1;
	s1.m_A; //其他类只能访问到公共权限 m_B是保护权限，类外不可以访问
}

//保护继承
class Son2 :protected Base1
{
public:
	void func()
	{
		m_A = 10; //可访问protected权限
		m_B = 10; //可访问protected权限
		//m_C; //不可访问
	}
};
void myClass2()
{
	Son2 s;
	//s.m_A; //不可访问
}

//私有继承
class Son3 :private Base1
{
public:
	void func()
	{
		m_A; //可访问private权限
		m_B; //可访问private权限
		//m_C; //不可访问
	}
};
class GrandSon3 :public Son3
{
public:
	void func()
	{
		//Son3是私有继承，所以继承Son3的属性在GrandSon3中都无法访问到
		//m_A;
		//m_B;
		//m_C;
	}
};
int main22() {
	system("pause");
	return 0;
}